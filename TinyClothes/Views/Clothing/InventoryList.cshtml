@model IEnumerable<Clothing>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor  http

@{
    ViewData["Title"] = "List Clothing Inventory";
}

<h1>Clothing Inventory</h1>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["Message"]
    </div>
}

<p>
    <a asp-action="Add">Create New</a>
</p>
<table class="table text-light">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ItemID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Color)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ItemID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            @{ 
                // Get current url path "/Clothing/InventoryList"
                string prevUrl = http.HttpContext.Request.Path;
                // Add query string "?page=2"
                prevUrl += http.HttpContext.Request.QueryString.Value;
            }
            <td>
                <a class="btn btn-light text-dark" asp-action="Edit" asp-route-id="@item.ItemID">Edit</a>
                <a class="btn btn-danger text-light" asp-action="Delete" asp-route-id="@item.ItemID">Delete</a>
                <a class="btn btn-success text-light" asp-action="Add" asp-controller="Cart" asp-route-id="@item.ItemID" asp-route-prevUrl="@prevUrl">Add to Cart</a>
            </td>
        </tr>
        }
    </tbody>
</table>

@* Print page numbers *@
<ul class="pagination">
    @for (int i = 1; i <= (int)ViewData["MaxPage"]; i++)
    {
        if (i != Convert.ToInt32(ViewData["CurrentPage"]))
        {
            <li class="page-item">
                <a class="page-link" asp-action="InventoryList" asp-route-page="@i">@i</a>
            </li>
        }
        else
        {
            <li class="page-item active">
                <a class="page-link" href="#">@i</a>
            </li>
        }
    }
</ul>
